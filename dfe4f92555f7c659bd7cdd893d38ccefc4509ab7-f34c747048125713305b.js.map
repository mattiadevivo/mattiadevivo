{"version":3,"file":"dfe4f92555f7c659bd7cdd893d38ccefc4509ab7-f34c747048125713305b.js","mappings":"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","sources":["webpack://mattiadevivo.dev/./node_modules/@mui/material/esm/internal/svg-icons/Cancel.js","webpack://mattiadevivo.dev/./node_modules/@mui/material/esm/Chip/chipClasses.js","webpack://mattiadevivo.dev/./node_modules/@mui/material/esm/Chip/Chip.js","webpack://mattiadevivo.dev/./node_modules/prism-react-renderer/prism/index.js","webpack://mattiadevivo.dev/./node_modules/prism-react-renderer/dist/index.js","webpack://mattiadevivo.dev/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://mattiadevivo.dev/./node_modules/prism-react-renderer/themes/github/index.js","webpack://mattiadevivo.dev/./src/components/code-block.tsx","webpack://mattiadevivo.dev/./src/components/seo.tsx","webpack://mattiadevivo.dev/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"avatar\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport chipClasses, { getChipUtilityClass } from './chipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\n\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const deleteIconColor = alpha(theme.palette.text.primary, 0.26);\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return _extends({\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // label will inherit this from root, then `clickable` class overrides this for both\n    cursor: 'default',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: _extends({\n      marginLeft: 5,\n      marginRight: -6\n    }, ownerState.size === 'small' && {\n      fontSize: 18,\n      marginLeft: 4,\n      marginRight: -4\n    }, ownerState.iconColor === ownerState.color && _extends({\n      color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n    }, ownerState.color !== 'default' && {\n      color: 'inherit'\n    })),\n    [`& .${chipClasses.deleteIcon}`]: _extends({\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : deleteIconColor,\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(deleteIconColor, 0.4)\n      }\n    }, ownerState.size === 'small' && {\n      fontSize: 16,\n      marginRight: 4,\n      marginLeft: -4\n    }, ownerState.color !== 'default' && {\n      color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].contrastTextChannel} / 0.7)` : alpha(theme.palette[ownerState.color].contrastText, 0.7),\n      '&:hover, &:active': {\n        color: (theme.vars || theme).palette[ownerState.color].contrastText\n      }\n    })\n  }, ownerState.size === 'small' && {\n    height: 24\n  }, ownerState.color !== 'default' && {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].main,\n    color: (theme.vars || theme).palette[ownerState.color].contrastText\n  }, ownerState.onDelete && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  }, ownerState.onDelete && ownerState.color !== 'default' && {\n    [`&.${chipClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n    }\n  });\n}, ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.clickable && {\n  userSelect: 'none',\n  WebkitTapHighlightColor: 'transparent',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity + theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n  },\n  '&:active': {\n    boxShadow: (theme.vars || theme).shadows[1]\n  }\n}, ownerState.clickable && ownerState.color !== 'default' && {\n  [`&:hover, &.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette[ownerState.color].dark\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.variant === 'outlined' && {\n  backgroundColor: 'transparent',\n  border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: (theme.vars || theme).palette.action.hover\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`& .${chipClasses.avatar}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.avatarSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.icon}`]: {\n    marginLeft: 4\n  },\n  [`& .${chipClasses.iconSmall}`]: {\n    marginLeft: 2\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    marginRight: 5\n  },\n  [`& .${chipClasses.deleteIconSmall}`]: {\n    marginRight: 3\n  }\n}, ownerState.variant === 'outlined' && ownerState.color !== 'default' && {\n  color: (theme.vars || theme).palette[ownerState.color].main,\n  border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7)}`,\n  [`&.${chipClasses.clickable}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity)\n  },\n  [`&.${chipClasses.focusVisible}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[ownerState.color].main, theme.palette.action.focusOpacity)\n  },\n  [`& .${chipClasses.deleteIcon}`]: {\n    color: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.7)` : alpha(theme.palette[ownerState.color].main, 0.7),\n    '&:hover, &:active': {\n      color: (theme.vars || theme).palette[ownerState.color].main\n    }\n  }\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap'\n}, ownerState.size === 'small' && {\n  paddingLeft: 8,\n  paddingRight: 8\n}));\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n\n  const ownerState = _extends({}, props, {\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? _extends({\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible\n  }, onDelete && {\n    disableRipple: true\n  }) : {};\n  let deleteIcon = null;\n\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  let avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n\n  let icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/_jsxs(ChipRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    ownerState: ownerState\n  }, moreProps, other, {\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'default'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\n\n var Prism = (function () {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\treturn _;\n\n}());\n\nvar prism = Prism;\nPrism.default = Prism;\n\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function (attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function (token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function (tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ; else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function (env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function (env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n                walkTokens(token.content);\n              }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\n\nexport default prism;\n","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\n\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function (line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function (types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function (tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function (theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) args[len] = arguments[len];\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };\n","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\n\nexport default theme;\n","// Original: https://raw.githubusercontent.com/PrismJS/prism-themes/master/themes/prism-ghcolors.css\nvar theme = {\n  plain: {\n    color: \"#393A34\",\n    backgroundColor: \"#f6f8fa\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\"],\n    style: {\n      color: \"#999988\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"string\", \"attr-value\"],\n    style: {\n      color: \"#e3116c\"\n    }\n  }, {\n    types: [\"punctuation\", \"operator\"],\n    style: {\n      color: \"#393A34\"\n    }\n  }, {\n    types: [\"entity\", \"url\", \"symbol\", \"number\", \"boolean\", \"variable\", \"constant\", \"property\", \"regex\", \"inserted\"],\n    style: {\n      color: \"#36acaa\"\n    }\n  }, {\n    types: [\"atrule\", \"keyword\", \"attr-name\", \"selector\"],\n    style: {\n      color: \"#00a4db\"\n    }\n  }, {\n    types: [\"function\", \"deleted\", \"tag\"],\n    style: {\n      color: \"#d73a49\"\n    }\n  }, {\n    types: [\"function-variable\"],\n    style: {\n      color: \"#6f42c1\"\n    }\n  }, {\n    types: [\"tag\", \"selector\", \"keyword\"],\n    style: {\n      color: \"#00009f\"\n    }\n  }]\n};\n\nexport default theme;\n","import React from \"react\";\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport theme from \"prism-react-renderer/themes/github\";\n\nconst CodeBlock = (props: any) => {\n  const className = props.children.props.className || \"\";\n  const matches = className.match(/language-(?<lang>.*)/);\n\n  return (\n    <Highlight\n      {...defaultProps}\n      code={props.children.props.children.trim()}\n      language={\n        matches && matches.groups && matches.groups.lang\n          ? matches.groups.lang\n          : \"\"\n      }\n      theme={theme}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <pre\n          className={className}\n          style={{\n            ...style,\n            padding: \"1em\",\n            maxWidth: \"100%\",\n            overflowX: \"auto\",\n            whiteSpace: \"pre-wrap\",\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </pre>\n      )}\n    </Highlight>\n  );\n};\n\nexport default CodeBlock;\nexport { CodeBlock };\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface DataProps {\n  site: {\n    siteMetadata: {\n      title: string;\n      siteUrl: string;\n      description: string;\n      keywords: string[];\n      author: string;\n      image: any;\n    };\n  };\n}\n\ninterface Props {\n  description?: string;\n  keywords?: string[];\n  title?: string;\n  image?: any;\n  url?: string;\n  children?: JSX.Element[];\n}\n\nconst SEO = (props: Props) => {\n  const { site }: DataProps = useStaticQuery(\n    graphql`\n      {\n        site {\n          siteMetadata {\n            description\n            keywords\n            title\n            image\n            siteUrl\n            author\n          }\n        }\n      }\n    `\n  );\n  const metaDescription = props.description || site.siteMetadata.description;\n  const metaKeywords = props.keywords || site.siteMetadata.keywords;\n  const metaTitle = props.title || site.siteMetadata.title;\n  const metaImage = props.image || site.siteMetadata.image;\n  const metaUrl = props.url\n    ? `${site.siteMetadata.siteUrl}/${props.url}`\n    : site.siteMetadata.siteUrl;\n  return (\n    <>\n      <title>{metaTitle}</title>\n      <meta name=\"viewport\" content=\"initial-scale=1, width=device-width\" />\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={metaKeywords.join(\", \")} />\n      <meta name=\"twitter:creator\" content={site.siteMetadata.author} />\n      <meta name=\"twitter:title\" content={metaTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:url\" content={metaUrl} />\n      <meta name=\"og:title\" content={metaTitle} />\n      <meta name=\"og:url\" content={metaUrl} />\n      <meta name=\"og:description\" content={metaDescription} />\n      <meta name=\"og:image\" content={metaImage} />\n      <meta name=\"og:image:width\" content={metaImage.width} />\n      <meta name=\"og:image:width\" content={metaImage.height} />\n      {props.children}\n    </>\n  );\n};\n\nexport default SEO;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["createSvgIcon","d","getChipUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ChipRoot","styled","name","overridesResolver","props","styles","ownerState","color","iconColor","clickable","onDelete","size","variant","avatar","capitalize","icon","deleteIcon","root","deletable","theme","deleteIconColor","palette","text","primary","textColor","mode","grey","maxWidth","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","vars","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","opacity","disabledOpacity","pointerEvents","marginLeft","marginRight","width","Chip","defaultAvatarColor","contrastText","dark","secondary","defaultIconColor","WebkitTapHighlightColor","primaryChannel","margin","contrastTextChannel","main","selectedChannel","selectedOpacity","focusOpacity","userSelect","hoverOpacity","boxShadow","shadows","defaultBorder","hover","focus","mainChannel","ChipLabel","label","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","inProps","ref","useThemeProps","avatarProp","className","clickableProp","component","ComponentProp","deleteIconProp","disabled","iconProp","onClick","onKeyDown","onKeyUp","other","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","focusVisible","disableRipple","Cancel","as","undefined","currentTarget","target","preventDefault","current","blur","children","Prism","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","alias","Array","isArray","map","replace","o","Object","prototype","toString","call","slice","objId","obj","defineProperty","value","clone","deepClone","visited","id","hasOwnProperty","forEach","v","i","getLanguage","element","m","exec","toLowerCase","parentElement","setLanguage","language","RegExp","classList","add","isActive","defaultActivation","no","contains","languages","plain","plaintext","txt","extend","redef","insertBefore","inside","before","insert","grammar","ret","token","newToken","old","DFS","this","callback","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","rest","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","push","toArray","all","callbacks","length","matchedStr","matchPattern","pattern","pos","lookbehind","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","greedy","global","flags","source","currentNode","reach","str","removeCount","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","attributes","aliases","apply","join","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","clike","c","keyword","modName","cpp","string","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","interpolation","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","Date","valueOf","Math","floor","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","String","fromCharCode","md","graphql","validTokens","filter","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","indexOf","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","keys","substring","middle","replacement","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","defineProperties","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","function","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","style","textDecorationLine","fontStyle","fontWeight","_defineProperty","enumerable","configurable","writable","_extends","assign","arguments","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","len","prevTheme","prevLanguage","output","getThemeDict","baseStyle","typeStyles","getStyleForToken","__proto__","constructor","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","matches","React","trim","groups","_ref","overflowX","site","useStaticQuery","metaDescription","description","siteMetadata","metaKeywords","keywords","metaTitle","title","metaImage","image","metaUrl","url","siteUrl","author","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","disableParentContext","allComponents","Provider"],"sourceRoot":""}